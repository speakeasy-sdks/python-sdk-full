"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import apierror as shared_apierror
from ..shared import errorresponse as shared_errorresponse
from ..shared import orderpayrequest as shared_orderpayrequest
from ..shared import orderpayresponse as shared_orderpayresponse
from ..shared import ratelimiterror as shared_ratelimiterror
from typing import Optional



@dataclasses.dataclass
class OrderPayRequest:
    x_api_version: str = dataclasses.field(metadata={'header': { 'field_name': 'x-api-version', 'style': 'simple', 'explode': False }})
    order_pay_request: Optional[shared_orderpayrequest.OrderPayRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    




@dataclasses.dataclass
class OrderPayResponse:
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    api_error: Optional[shared_apierror.APIError] = dataclasses.field(default=None)
    r"""API related Errors"""
    error_response: Optional[shared_errorresponse.ErrorResponse] = dataclasses.field(default=None)
    r"""Any bad or invalid request will lead to following error object"""
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)
    order_pay_response: Optional[shared_orderpayresponse.OrderPayResponse] = dataclasses.field(default=None)
    r"""OK"""
    rate_limit_error: Optional[shared_ratelimiterror.RateLimitError] = dataclasses.field(default=None)
    r"""Either ports issue or too many requests"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    

