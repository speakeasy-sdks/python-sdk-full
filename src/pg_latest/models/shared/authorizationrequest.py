"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from pg_latest import utils
from typing import Optional

class AuthorizationRequestAction(str, Enum):
    r"""Type of authorization to run. Can be one of 'CAPTURE' , 'VOID'"""
    CAPTURE = 'CAPTURE'
    VOID = 'VOID'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class AuthorizationRequest:
    action: Optional[AuthorizationRequestAction] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('action'), 'exclude': lambda f: f is None }})
    r"""Type of authorization to run. Can be one of 'CAPTURE' , 'VOID'"""
    amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount'), 'exclude': lambda f: f is None }})
    r"""The amount if you are running a 'CAPTURE'"""
    

