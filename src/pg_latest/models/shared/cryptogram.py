"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from pg_latest import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class Cryptogram:
    card_display: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('card_display'), 'exclude': lambda f: f is None }})
    r"""last 4 digits of original card number"""
    card_expiry_mm: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('card_expiry_mm'), 'exclude': lambda f: f is None }})
    r"""token pan expiry month"""
    card_expiry_yy: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('card_expiry_yy'), 'exclude': lambda f: f is None }})
    r"""token pan expiry year"""
    card_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('card_number'), 'exclude': lambda f: f is None }})
    r"""token pan number"""
    cryptogram: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cryptogram'), 'exclude': lambda f: f is None }})
    r"""cryptogram"""
    instrument_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instrument_id'), 'exclude': lambda f: f is None }})
    r"""instrument_id of saved instrument"""
    token_requestor_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('token_requestor_id'), 'exclude': lambda f: f is None }})
    r"""TRID issued by card networks"""
    

