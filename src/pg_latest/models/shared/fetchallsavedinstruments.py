"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import savedinstrumentmeta as shared_savedinstrumentmeta
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from pg_latest import utils
from typing import Optional

class FetchAllSavedInstrumentsInstrumentStatus(str, Enum):
    r"""Status of the saved instrument."""
    ACTIVE = 'ACTIVE'
    INACTIVE = 'INACTIVE'

class FetchAllSavedInstrumentsInstrumentType(str, Enum):
    r"""Type of the saved instrument"""
    CARD = 'card'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class FetchAllSavedInstruments:
    afa_reference: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('afa_reference'), 'exclude': lambda f: f is None }})
    r"""cf_payment_id of the successful transaction done while saving instrument"""
    created_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'exclude': lambda f: f is None }})
    r"""Timestamp at which instrument was saved."""
    customer_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customer_id'), 'exclude': lambda f: f is None }})
    r"""customer_id for which the instrument was saved"""
    instrument_display: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instrument_display'), 'exclude': lambda f: f is None }})
    r"""masked card number displayed to the customer"""
    instrument_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instrument_id'), 'exclude': lambda f: f is None }})
    r"""saved instrument id"""
    instrument_meta: Optional[shared_savedinstrumentmeta.SavedInstrumentMeta] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instrument_meta'), 'exclude': lambda f: f is None }})
    instrument_status: Optional[FetchAllSavedInstrumentsInstrumentStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instrument_status'), 'exclude': lambda f: f is None }})
    r"""Status of the saved instrument."""
    instrument_type: Optional[FetchAllSavedInstrumentsInstrumentType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instrument_type'), 'exclude': lambda f: f is None }})
    r"""Type of the saved instrument"""
    instrument_uid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instrument_uid'), 'exclude': lambda f: f is None }})
    r"""Unique id for the saved instrument"""
    

