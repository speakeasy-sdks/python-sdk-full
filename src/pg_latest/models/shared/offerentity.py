"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .offerdetails import OfferDetails
from .offermeta import OfferMeta
from .offertnc import OfferTnc
from .offervalidations import OfferValidations
from dataclasses_json import Undefined, dataclass_json
from pg_latest import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OfferEntity:
    offer_details: Optional[OfferDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offer_details'), 'exclude': lambda f: f is None }})
    offer_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offer_id'), 'exclude': lambda f: f is None }})
    offer_meta: Optional[OfferMeta] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offer_meta'), 'exclude': lambda f: f is None }})
    offer_status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offer_status'), 'exclude': lambda f: f is None }})
    offer_tnc: Optional[OfferTnc] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offer_tnc'), 'exclude': lambda f: f is None }})
    offer_validations: Optional[OfferValidations] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offer_validations'), 'exclude': lambda f: f is None }})
    

