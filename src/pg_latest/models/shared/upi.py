"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import upiauthorizedetails as shared_upiauthorizedetails
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from pg_latest import utils
from typing import Optional

class UpiChannel(str, Enum):
    r"""Specify the channel through which the payment must be processed. Can be one of [\\"link\\", \\"collect\\", \\"qrcode\\"]"""
    LINK = 'link'
    COLLECT = 'collect'
    QRCODE = 'qrcode'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Upi:
    channel: UpiChannel = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channel') }})
    r"""Specify the channel through which the payment must be processed. Can be one of [\\"link\\", \\"collect\\", \\"qrcode\\"]"""
    authorization: Optional[shared_upiauthorizedetails.UPIAuthorizeDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authorization'), 'exclude': lambda f: f is None }})
    authorize_only: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authorize_only'), 'exclude': lambda f: f is None }})
    r"""For one time mandate on UPI. Set this as authorize_only = true. Please note that you can only use the \\"collect\\" channel if you are sending a one time mandate request"""
    upi_expiry_minutes: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('upi_expiry_minutes'), 'exclude': lambda f: f is None }})
    r"""The UPI request will be valid for this expiry minutes. This parameter is only applicable for a UPI collect payment. The default value is 5 minutes. You should keep the minimum as 5 minutes, and maximum as 15 minutes"""
    upi_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('upi_id'), 'exclude': lambda f: f is None }})
    r"""Customer UPI VPA to process payment."""
    

